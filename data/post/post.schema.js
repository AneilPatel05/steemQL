const Post = `
  type Post {
    id: ID 
    author: String
    permlink: String
    category: String
    parent_author: String
    parent_permlink: String
    title: String
    body: String
    json_metadata: String 
    last_update: String
    created: String
    active: String
    last_payout: String
    depth: Int
    children: Int
    net_rshares: Int
    abs_rshares: Int
    vote_rshares: Int
    children_abs_rshares: Int
    cashout_time: String
    max_cashout_time: String
    total_vote_weight: Int
    reward_weight: Int
    total_payout_value: String
    curator_payout_value: String
    author_rewards: Int
    net_votes: Int
    root_comment: Int
    max_accepted_payout: String
    percent_steem_dollars: Int
    allow_replies: Boolean
    allow_votes: Boolean
    allow_curation_rewards: Boolean
    url: String
    root_title: String
    pending_payout_value: String
    total_pending_payout_value: String
    author_reputation: String
    promoted: String
    body_length: Int
    authorObject: User
  }
  
  input PostInput {
    author: String!
    body: String!
    tags: [String!]!
    title: String! 
    # Permlink will be autogenerated if omitted. You can provide your own one.
    permlink: String
    json_metadata: String
  }
  
  input PostOptions {
    allow_curation_rewards: Boolean
    allow_votes: Boolean
    author: String
    extensions: [ExtensionInput] 
    max_accepted_payout: String
    percent_steem_dollars: Int
    permlink: String
  }
  
  extend type Query {
    # Get posts
    posts(by: String, tag:String): [Post]
    # Get single post or comment
    post(author: String!, permlink: String!): Post 
  }
  
  extend type Mutation {
    # Create a post and provide optional options.
    createPost(post: PostInput!, options: PostOptions, key: String!): Post
    # Convenience method with a minimum set of params to create a post.
    createSimplePost(author: String!, title: String!, body: String!, tags: [String!]!, key: String!):
      Post
  }
`;

// TODO: Implement `type` for :
// beneficiaries: [],
// active_votes: [ [Object] ],
// reblogged_by: []
// replies: [],

export default Post;
